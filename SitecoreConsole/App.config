<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="sitecore" type="Sitecore.Configuration.RuleBasedConfigReader, Sitecore.Kernel" />
    <section name="configBuilders" type="System.Configuration.ConfigurationBuildersSection, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" restartOnExternalChanges="false" requirePermission="false" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
  </configSections>
  <configBuilders>
    <builders>
      <add name="SitecoreAppSettingsBuilder" mode="Strict" prefix="SITECORE_APPSETTINGS_" stripPrefix="true" type="Sitecore.Configuration.FlexibleEnvironmentConfigBuilder, Sitecore.Kernel" />
      <add name="SitecoreConnectionStringsBuilder" mode="Strict" prefix="SITECORE_CONNECTIONSTRINGS_" stripPrefix="true" type="Microsoft.Configuration.ConfigurationBuilders.EnvironmentConfigBuilder, Microsoft.Configuration.ConfigurationBuilders.Environment, Version=1.0.0.0, Culture=neutral" />
    </builders>
  </configBuilders>
  <connectionStrings configBuilders="SitecoreConnectionStringsBuilder">
    <add name="translation" connectionString="Data Source=localhost;Initial Catalog=SitecoreTranslations;User ID=sa;Password=123456" />
    <add name="core" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=coreuser;Password=FCOwi2Mu6J3uNrXHFXic" />
    <add name="security" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=securityuser;Password=m4WZ1KeHU8HaCUjb8Hth" />
    <add name="master" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=sa;Password=123456" />
    <add name="web" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=webuser;Password=ObJcddScrxHJKp8Na9r9" />
    <add name="messaging" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=messaginguser;Password=yPJQOoFoKrBIc8r4PilI" />
    <add name="xdb.processing.pools" connectionString="Data Source=localhost;Initial Catalog=your_db.Pools;User ID=poolsuser;Password=ByMEpahprcswl74vqQGO" />
    <add name="xdb.referencedata" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=referencedatauser;Password=0yg1kyw7oHUVSiIwZx1R" />
    <add name="xdb.processing.tasks" connectionString="Data Source=localhost;Initial Catalog=your_db.Tasks;User ID=tasksuser;Password=ls81aOu5p3VpPqYRL5Hh" />
    <add name="experienceforms" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=formsuser;Password=dpTolr3wEVLRJloN6zwu" />
    <add name="exm.master" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=exmmasteruser;Password=54zeXkmraGwXOSA7irBE" />
    <add name="reporting" connectionString="Data Source=localhost;Initial Catalog=your_db;User ID=reportinguser;Password=7pD7um7Xfo6dPPGKE9Hb" />
    <add name="sitecore.reporting.client" connectionString="https://your_xconnect.xconnect" />
    <add name="sitecore.reporting.client.certificate" connectionString="StoreName=My;StoreLocation=LocalMachine;FindType=FindByThumbprint;FindValue=4D1F28B5B3ABEB925878A4B26FF24BD6E7B6D424" />
    <add name="solr.search" connectionString="https://localhost:8985/solr" />
    <add name="sitecoreidentity.secret" connectionString="rQoG6fiMtMGBO6zbENzEybtn78Epwl5ea5lEWyxoUZlQolwVrrFL368giM7LtcoEErKris8x8ejQcrHXGaKaS4JgddkQ69sh5UTI" />
    <add name="xconnect.collection" connectionString="https://your_xconnect.xconnect" />
    <add name="xconnect.collection.certificate" connectionString="StoreName=My;StoreLocation=LocalMachine;FindType=FindByThumbprint;FindValue=4D1F28B5B3ABEB925878A4B26FF24BD6E7B6D424" />
    <add name="xdb.marketingautomation.operations.client" connectionString="https://your_xconnect.xconnect" />
    <add name="xdb.marketingautomation.operations.client.certificate" connectionString="StoreName=My;StoreLocation=LocalMachine;FindType=FindByThumbprint;FindValue=4D1F28B5B3ABEB925878A4B26FF24BD6E7B6D424" />
    <add name="xdb.marketingautomation.reporting.client" connectionString="https://your_xconnect.xconnect" />
    <add name="xdb.marketingautomation.reporting.client.certificate" connectionString="StoreName=My;StoreLocation=LocalMachine;FindType=FindByThumbprint;FindValue=4D1F28B5B3ABEB925878A4B26FF24BD6E7B6D424" />
    <add name="xdb.referencedata.client" connectionString="https://your_xconnect.xconnect" />
    <add name="xdb.referencedata.client.certificate" connectionString="StoreName=My;StoreLocation=LocalMachine;FindType=FindByThumbprint;FindValue=4D1F28B5B3ABEB925878A4B26FF24BD6E7B6D424" />
    <add name="EXM.CryptographicKey" connectionString="0x1202597007335360563530951468191665280708119442876100319504271743" />
    <add name="EXM.AuthenticationKey" connectionString="0x9478198403316168726243768379980535208081950009369367265533761881" />
    <add name="PackageManagementServiceUrl" connectionString="https://updatecenter.cloud.sitecore.net/" />
  </connectionStrings>
  <sitecore>
    <databases>
      <!-- master -->
      <database id="master" singleInstance="true" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel">
        <param desc="name">$(id)</param>
        <icon>Images/database_master.png</icon>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" param1="$(id)">
            <prefetch hint="raw:AddPrefetch">
              <sc.include file="App_Config/Prefetch/Common.config" />
              <sc.include file="App_Config/Prefetch/Master.config" />
            </prefetch>
          </dataProvider>
        </dataProviders>
        <securityEnabled>true</securityEnabled>
        <publishVirtualItems>true</publishVirtualItems>
        <PropertyStore ref="PropertyStoreProvider/store[@name='$(id)']" />
        <remoteEvents.EventQueue>
          <obj ref="eventing/eventQueueProvider/eventQueue[@name='$(id)']" />
        </remoteEvents.EventQueue>
        <workflowProvider hint="defer" type="Sitecore.Workflows.Simple.WorkflowProvider, Sitecore.Kernel">
          <param desc="database">$(id)</param>
          <param desc="history store" ref="workflowHistoryStores/main" param1="$(id)" />
        </workflowProvider>
        <archives hint="raw:AddArchive">
          <archive name="archive" />
          <archive name="recyclebin" />
        </archives>
        <NotificationProvider type="Sitecore.Data.DataProviders.SqlServer.SqlServerNotificationProvider, Sitecore.Kernel">
          <param connectionStringName="$(id)">
          </param>
          <param desc="databaseName">$(id)</param>
        </NotificationProvider>
        <cacheSizes hint="setting">
          <data>100MB</data>
          <items>50MB</items>
          <paths>2500KB</paths>
          <itempaths>50MB</itempaths>
          <standardValues>2500KB</standardValues>
        </cacheSizes>
        <BlobStorage hint="raw:AddBlobStorage">
          <providers default="classic">
            <provider name="classic" type="Sitecore.Data.Blobs.ClassicSqlBlobProvider, Sitecore.Kernel">
              <param desc="databaseName">$(id)</param>
            </provider>
          </providers>
        </BlobStorage>
      </database>
    </databases>
    <eventing defaultProvider="sitecore">
      <!-- Settings related to queued events -->
      <eventQueueMonitor>
        <!-- Time between checking the queue for newly queued events. If new events are found they will be raised. -->
        <processingInterval>00:00:02</processingInterval>
      </eventQueueMonitor>
      <eventQueueProvider defaultEventQueue="core">
        <eventQueue name="master" type="Sitecore.Data.Eventing.SqlServerEventQueue, Sitecore.Kernel" >
          <param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
          <param hint="" ref="PropertyStoreProvider/store[@name='$(name)']" />
        </eventQueue>
        <eventQueue name="core" type="Sitecore.Data.Eventing.SqlServerEventQueue, Sitecore.Kernel" >
          <param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
          <param hint="" ref="PropertyStoreProvider/store[@name='$(name)']" />
        </eventQueue>
      </eventQueueProvider>
      <providers>
        <clear/>
        <add name="sitecore" type="Sitecore.Eventing.EventProvider, Sitecore.Kernel" systemDatabaseName="core"/>
      </providers>
    </eventing>
    <dataProviders>
      <main type="Sitecore.Data.SqlServer.SqlServerDataProvider, Sitecore.Kernel">
        <param connectionStringName="master" />
        <Name>master</Name>
      </main>
      <filesystem type="Sitecore.Data.DataProviders.FileSystemDataProvider, Sitecore.Kernel">
        <CacheOptions.DisableAll>true</CacheOptions.DisableAll>
      </filesystem>
      <templatefile type="Sitecore.Data.DataProviders.TemplateFileResolver, Sitecore.Kernel">
        <param desc="template file">master</param>
        <abortChain>true</abortChain>
      </templatefile>
      <methodGroups>
        <copyMove>
          <CopyItem />
          <MoveItem />
        </copyMove>
        <create>
          <AddVersion />
          <CreateItem />
        </create>
        <delete>
          <DeleteItem />
          <RemoveVersion />
          <RemoveVersions />
        </delete>
        <properties>
          <GetProperty />
          <RemoveProperty />
          <SetProperty />
        </properties>
        <publishing>
          <AddToPublishQueue />
          <CleanupPublishQueue />
          <GetPublishQueue />
        </publishing>
        <query>
          <SelectIDs />
          <SelectSingleID />
        </query>
        <read>
          <BlobStreamExists />
          <GetItemDefinition />
          <GetItemFields />
          <GetItemVersions />
        </read>
        <relations>
          <GetChildIDs />
          <GetParentID />
          <GetRootID />
          <HasChildren />
        </relations>
        <resolve>
          <ResolvePath />
        </resolve>
        <templates>
          <ChangeTemplate />
          <GetTemplateItemIds />
          <GetTemplates />
        </templates>
        <update>
          <SaveItem />
        </update>
        <workflow>
          <GetItemsInWorkflowState />
          <GetWorkflowInfo />
          <SetWorkflowInfo />
        </workflow>
      </methodGroups>
    </dataProviders>
    <PropertyStoreProvider defaultStore="core">
      <store name="master" prefix="master" getValueWithoutPrefix="true" singleInstance="true" type="Sitecore.Data.Properties.SqlServerPropertyStore, Sitecore.Kernel">
        <param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
        <param resolve="true" type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel"/>
        <param resolve="true" type="Sitecore.Abstractions.BaseCacheManager, Sitecore.Kernel"/>
      </store>
      <store name="core" prefix="core" getValueWithoutPrefix="true" singleInstance="true" type="Sitecore.Data.Properties.SqlServerPropertyStore, Sitecore.Kernel">
        <param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
        <param resolve="true" type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel"/>
        <param resolve="true" type="Sitecore.Abstractions.BaseCacheManager, Sitecore.Kernel"/>
      </store>
    </PropertyStoreProvider>
    <workflowHistoryStores>
      <main type="Sitecore.Data.SqlServer.SqlServerHistoryStore, Sitecore.Kernel">
        <param connectionStringName="$(1)" />
      </main>
    </workflowHistoryStores>
    <dataApis>
      <!-- Data api for accessing SQL Server databases. -->
      <dataApi name="SqlServer" type="Sitecore.Data.SqlServer.SqlServerDataApi, Sitecore.Kernel">
        <param connectionStringName="$(1)" />
      </dataApi>
    </dataApis>
    <settings>
      <setting name="LicenseFile" value="App_Data/license.xml" />
    </settings>
    <itemManager defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.Data.Managers.ItemProvider, Sitecore.Kernel" resolve="true" />
      </providers>
    </itemManager>
    <!-- TEMPLATES -->
    <templateManager defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.Data.Managers.TemplateProvider, Sitecore.Kernel" />
      </providers>
    </templateManager>
    <pipelines>
      <filterItem>
        <processor type="Sitecore.Pipelines.FilterItem.CheckIfFilteringIsActive, Sitecore.Kernel" />
        <processor type="Sitecore.Pipelines.FilterItem.DisableApprovedVersionFiltering, Sitecore.Kernel" />
        <processor type="Sitecore.Pipelines.FilterItem.GetPublishedVersionOfItem, Sitecore.Kernel" resolve="true" />
        <processor type="Sitecore.Pipelines.FilterItem.EnsureFilteredItem, Sitecore.Kernel" />
      </filterItem>
      <getFieldValue performanceCritical="true">
        <processor type="Sitecore.Pipelines.GetFieldValue.GetInheritedValue, Sitecore.Kernel" />
        <processor type="Sitecore.Pipelines.GetFieldValue.GetStandardValue, Sitecore.Kernel" />
        <processor type="Sitecore.Pipelines.GetFieldValue.GetDefaultValue, Sitecore.Kernel" />
      </getFieldValue>
      <getFieldLabel>
        <processor type="Sitecore.Pipelines.GetFieldLabel.ResolveFieldLabel, Sitecore.Kernel" resolve="true" />
      </getFieldLabel>
    </pipelines>
    <accessRights defaultProvider="config">
      <providers>
        <clear/>
        <add name="config" type="Sitecore.Security.AccessControl.ConfigAccessRightProvider, Sitecore.Kernel" configRoot="accessRights"/>
      </providers>
      <rights defaultType="Sitecore.Security.AccessControl.AccessRight, Sitecore.Kernel">
        <add name="field:read" comment="Read right for fields." title="Field Read"/>
        <add name="field:write" comment="Write right for fields." title="Field Write" modifiesData="true"/>
        <add name="item:read" comment="Read right for items." title="Read"/>
        <add name="item:write" comment="Write right for items." title="Write" modifiesData="true"/>
        <add name="item:rename" comment="Rename right for items." title="Rename" modifiesData="true"/>
        <add name="item:create" comment="Create right for items." title="Create" modifiesData="true"/>
        <add name="item:delete" comment="Delete right for items." title="Delete" modifiesData="true"/>
        <add name="item:admin" comment="Admin right for items." title="Administer" modifiesData="true"/>
        <add name="language:read" comment="Read right for languages." title="Language Read"/>
        <add name="language:write" comment="Write right for languages." title="Language Write" modifiesData="true"/>
        <add name="site:enter" comment="The right to enter a site." title="Site Enter"/>
        <add name="insert:show" comment="Determines if the user can see the insert option" title="Show in Insert"/>
        <add name="workflowState:delete" comment="The right to delete an item based on its workflow state." title="Workflow State Delete"/>
        <add name="workflowState:write" comment="The right to write an item based on its workflow state." title="Workflow State Write" modifiesData="true"/>
        <add name="workflowCommand:execute" comment="The right to execute a workflow command." title="Workflow Command Execute"/>
        <add name="profile:customize" comment="The right to input out of range values of profile keys, that belong to this profile." title="Customize Profile Key Values"/>
        <add name="*" comment="Wildcard right. For internal use only."/>
      </rights>
      <rules>
        <add prefix="field:" ancestor="{3C1715FE-6A13-4FCF-845F-DE308BA9741D}" comment="/sitecore/templates" typeName="Sitecore.Data.Fields.Field" />
        <add prefix="insert:" templateId="{35E75C72-4985-4E09-88C3-0EAC6CD1E64F}" comment="insert:show for Branch template"/>
        <add prefix="insert:" templateId="{B2613CC1-A748-46A3-A0DB-3774574BD339}" comment="insert:show for Command template"/>
        <add prefix="insert:" templateId="{AB86861A-6030-46C5-B394-E8F99E8B87DB}" comment="insert:show for Template template"/>
        <add prefix="item:" typeName="Sitecore.Data.Items.Item"/>
        <add prefix="language:" ancestor="{64C4F646-A3FA-4205-B98E-4DE2C609B60F}" comment="/sitecore/system/language"/>
        <add prefix="workflowState:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows"/>
        <add prefix="workflowCommand:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows"/>
        <add prefix="profile:" templateId="{8E0C1738-3591-4C60-8151-54ABCC9807D1}" comment="profile:customize for Profile items only"/>
      </rules>
    </accessRights>
    <authentication defaultProvider="forms">
      <providers>
        <clear/>
        <add name="forms" type="Sitecore.Security.Authentication.FormsAuthenticationProvider, Sitecore.Kernel" />
        <add name="disabled" type="Sitecore.Security.Authentication.DisabledAuthenticationProvider, Sitecore.Kernel" />
      </providers>
    </authentication>
    <domainManager defaultProvider="config">
      <providers>
        <clear />
        <add name="file" type="Sitecore.Security.Domains.ConfigStoreDomainProvider, Sitecore.Kernel" configStoreName="domains" />
        <add name="config" type="Sitecore.SecurityModel.ConfigDomainProvider, Sitecore.Kernel" domainList="domainManager/domains" defaultDomain="default" />
      </providers>
      <!-- Sample for use with config provider above -->
      <domains>
        <domain id="sitecore" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>false</ensureAnonymousUser>
        </domain>
        <domain id="extranet" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>true</ensureAnonymousUser>
        </domain>
        <domain id="default" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>true</ensureAnonymousUser>
          <isDefault>true</isDefault>
        </domain>
      </domains>
    </domainManager>
    <configStores>
      <add name="domains" type="Sitecore.Configuration.XmlConfigStore, Sitecore.Kernel" factoryMethod="LoadFromFile" arg0="App_Config/Security/Domains.config" />
      <add name="globalRoles" type="Sitecore.Configuration.XmlConfigStore, Sitecore.Kernel" factoryMethod="LoadFromFile" arg0="App_Config/Security/GlobalRoles.config" />
    </configStores>
    <authorization defaultProvider="sql">
      <providers>
        <clear/>
        <add name="sql" type="Sitecore.Security.AccessControl.SqlAuthorizationProvider, Sitecore.Kernel" connectionStringName="security" embedAclInItems="true">
          <param ref="dataApis/dataApi[@name='SqlServer']" param1="$(connectionStringName)"/>
        </add>
        <add name="disabled" type="Sitecore.Security.AccessControl.DisabledAuthorizationProvider, Sitecore.Kernel" />
      </providers>
    </authorization>
    <rolesInRolesManager defaultProvider="sql" enabled="true">
      <providers>
        <clear/>
        <add name="sql" type="Sitecore.Security.Accounts.SqlServerRolesInRolesProvider, Sitecore.Kernel" connectionStringName="security" rolesInRolesSupported="true" globalRolesConfigStoreName="globalRoles" raiseEvents="true" >
          <param ref="dataApis/dataApi[@name='SqlServer']" param1="$(connectionStringName)"/>
        </add>
        <add name="disabled" type="Sitecore.Security.Accounts.DisabledRolesInRolesProvider, Sitecore.Kernel"  />
      </providers>
    </rolesInRolesManager>
    <clientDataStore type="Sitecore.Data.SqlServer.SqlServerClientDataStore, Sitecore.Kernel">
      <param desc="connection string name" connectionStringName="master" />
      <param desc="object lifetime">00:20:00</param>
      <param desc="event queue" ref="eventing/eventQueueProvider/eventQueue[@name='core']" />
      <param desc="eventManager" resolve="true" type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel" />
    </clientDataStore>
    <standardValues defaultProvider="sitecore">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Data.StandardValuesProvider, Sitecore.Kernel" resolve="true" />
      </providers>
    </standardValues>
    <fieldTypes>
      <sc.include file="App_Config/FieldTypes.config" />
    </fieldTypes>
    <siteManager defaultProvider="sitecore">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Sites.SitecoreSiteProvider, Sitecore.Kernel" checkSecurity="false">
          <providers hint="raw:AddProviderReference">
            <reference name="config" />
          </providers>
        </add>
        <add name="config" type="Sitecore.Sites.ConfigSiteProvider, Sitecore.Kernel" siteList="sites" checkSecurity="false" />
      </providers>
    </siteManager>
  </sitecore>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
  </startup>
</configuration>